//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCTRC.Models
{
    using Microsoft.AspNet.Identity.EntityFramework;
    using System;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;

    public partial class SctrcContainer : DbContext
    {
        public SctrcContainer()
            : base("DefaultConnection")
        {
        }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.Entity<IdentityRole>().HasKey<string>(r => r.Id).Property(p => p.Name).IsRequired();
            modelBuilder.Entity<IdentityUserRole>().HasKey(r => new { r.RoleId, r.UserId });
            modelBuilder.Entity<IdentityUserLogin>().HasKey(u => new { u.UserId, u.LoginProvider, u.ProviderKey });
            modelBuilder.Entity<Activity>()
                .Map(m => m.ToTable("Activities"))
                .Map<Question>(m =>
                {
                    m.MapInheritedProperties();
                    m.ToTable("Questions");
                })
                .Map<Human>(m =>
                {
                    m.MapInheritedProperties();
                    m.ToTable("Humans");
                });
            modelBuilder.Entity<Event>()
                .Map(m => m.ToTable("Events"));
            modelBuilder.Entity<Team>()
                .Map(m => m.ToTable("Teams"));

            modelBuilder.Entity<Activity>().HasKey<int>(a => a.Id).Property(a => a.Id).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);

        }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
    }
}
